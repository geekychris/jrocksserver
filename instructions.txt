Create a java based service.  You should use maven build mechanism with a pom.xml.  Do not use gradle.  This can be springboot based.  The service is to provide access to multiple rocksdb databases.  The service implements an api using protocol buffers.  There are three families of apis.  The first is basic CRUD.  Get, Put and Delete of key value pairs.  Put and get should support multiple gets.  Calls should include the name of the database.  The get should support prefix based keys where all key values matching a key prefix are returned.  Put and get should support streaming so not to blow memory.  There should be a further api for fetching all key value pairs from a given database sequence number.  This api should return the current sequence number of the database along with all key values from the sequence number provided up to the latest sequence number.  There should further support syncrhonizing key values from one service instance to another otherwise known as streaming replication.  This api should either be triggered by a grpc or a rest call and should specify from which service (host, port), what database and what starting sequence number.  The api should fetch all key values and write to a local database.  The database name may differ from that of the remote node.  The api should return both the number of records processed along with the latest sequence number from the remote service at the point of initiating the replication.  Include readme.md describing how to build, tests and docker build related artifacts.  Include instructions on how to call the apis from a command line.
